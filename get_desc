#!/usr/bin/env python

from Tools.standard_script_setup import *
from CIME.utils         import expect, get_model
from CIME.case          import Case
from CIME.check_lockedfiles import lock_file

logger = logging.getLogger(__name__)

###############################################################################
def parse_command_line(args, cimeroot, description):
###############################################################################
    help_str = \
"""
{0} --compset [COMPSET] 
OR
{0} --help
""".format(os.path.basename(args[0]))
    model = get_model()

    parser = argparse.ArgumentParser(usage=help_str,
                                     description=description,
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)


    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("--compset", "-compset", required=True,
                        help="(required) Specify a compset. "
                        "To see list of current compsets, use the utility query_config in this directory")

    args = CIME.utils.parse_args_and_handle_standard_logging_options(args, parser)

    return args.compset

###############################################################################
def _main_func(description):
###############################################################################
    cimeroot  = os.path.abspath(CIME.utils.get_cime_root())

    compset = parse_command_line(sys.argv, cimeroot, description)

    caseroot = os.getcwd()
    print "DEBUG: caseroot is ",caseroot

    with Case(caseroot, read_only=False) as case:
        case.get_compset_description(compset_name=compset)

###############################################################################

if __name__ == "__main__":
    _main_func(__doc__)
