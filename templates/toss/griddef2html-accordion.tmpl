<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>

    <style type="text/css">
      body {
         font-family:'Open Sans', Arial, sans-serif;
         font-size:14px;
         font-weight:300;
         line-height:1.6em;
         color:#656565;
         width: 90%;
         align: center;
      }

      .container {
         padding: 0 30px 0 30px;
         padding-top: 0px;
         padding-right: 30px;
         padding-bottom: 30px;
         padding-left: 30px;
         position: relative;
      }
      
      dt { color:#656565; font-weight: bold }

      .accordionItem h2 { margin: 0; font-size: 1.1em; padding: 0.4em; color: #000; background-color: #E3E4E6; border-bottom: 1px solid #66d; width: 90%}
      .accordionItem h2:hover { cursor: pointer; }
      .accordionItem div { margin: 0; padding: 1em 0.4em; background-color: #eef; border-bottom: 1px solid #66d; width: 90%}
      .accordionItem.hide h2 { color: #000; background-color: #E3E4E6; width: 90%}
      
      .detailsBtn { background-color: #E3E4E6; }

      #variable { color:#66d; font-size: 1.2em; font-weight: bold; display: inline-block; margin-right: 30px; }
      #emphasis { color:#656565; font-weight: bold; display: inline-block; }
      #small { color:#9f9f9f; display: inline-block; }

    </style>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
    <script type="text/javascript">
    //<![CDATA[

    var accordionItems = new Array();

    function init() {

      // Grab the accordion items from the page
      var divs = document.getElementsByTagName( 'div' );
      for ( var i = 0; i < divs.length; i++ ) {
        if ( divs[i].className == 'accordionItem' ) accordionItems.push( divs[i] );
      }

      // Assign onclick events to the accordion item headings
      for ( var i = 0; i < accordionItems.length; i++ ) {
        var h2 = getFirstChildWithTagName( accordionItems[i], 'H2' );
        h2.onclick = toggleItem;
      }

      // Hide all accordion item bodies 
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }
    }

    function toggleItem() {
      var itemClass = this.parentNode.className;

      // Hide all items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }

      // Show this item if it was previously hidden
      if ( itemClass == 'accordionItem hide' ) {
        this.parentNode.className = 'accordionItem';
        $(this).parent().find('div').slideDown();
      }
    }

    function getFirstChildWithTagName( element, tagName ) {
      for ( var i = 0; i < element.childNodes.length; i++ ) {
        if ( element.childNodes[i].nodeName == tagName ) return element.childNodes[i];
      }
    }

    function hideAll() {
      // Hide all accordian items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }
    }

    function showAll() {
      // show all accordian items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideDown();
      }
    }

     //]]>
    </script>

  </head>
  <body onload="init()">
    <div class="container">
        <h1>Grid Resolution Definitions</h1>
	<p style="font-size: 0.9em;">
	  Model Version: {{ model_version }}<br>
	  HTML created on: {{ today }}
	</p>
  	<p>
	This page contains the complete list of grid resolution short and descriptions.<br/>
	They are grouped by alias names designed to aid browsing.  <br/>
	<br/>

	Clicking on the blue text will display additional descriptive information.<br/>  
	Click on the <b>"Show Details"</b> button and then cntl+F key to search for specific text in this file.
	</p>

	<button class="detailsBtn" onclick="showAll();">Show Details</button>
	<button class="detailsBtn" onclick="hideAll();">Hide Details</button>

	<br/><br/>


    <div class="accordionItem">
      <h2> <span id="variable">Grid Naming Convention</span></h2>	  
      <div>
	<p>The notation for the grid longname is<br/>
	  <pre>
a%name_l%name_oi%name_r%name_m%mask_g%name_w%name
where
a% => atm, l% => lnd, oi% => ocn/ice, r% => river, m% => mask, g% => glc, w% => wav
         </pre>
        Supported out of the box grid configurations are given via alias specification in
	the file <b>"config_grids.xml"</b>. Each grid alias can also be associated  with the 
	following optional attributes
        <br/>
	<pre>
compset       (Regular expression for compset matches that are required for this grid)
not_compset   (Regular expression for compset matches that are not permitted this grid)
	</pre>
        Using the alias and the optional <b>"compset"</b> and <b>"not_compset"</b> attributes a grid longname is created.
	Note that the mask is for information only - and is not an attribute of the grid.
	By default, if the mask is not specified below, it will be set to the ocnice grid.
	And if there is no ocnice grid, such as for single column, the mask is null since it does not mean anything.
       </p>
       </div>
    </div>

    <div class="accordionItem">
      <h2> <span id="variable">Default Component Grids</span></h2>	  
      <div>
	<table>
	  <tr>
	    <th align="left">Component</th>
	    <th align="left">Compset</th>
	    <th align="left">Value</th>
	  </tr>
	  <tr><td>atm</td> <td>SATM</td> <td>null</td></tr>
	  <tr><td>lnd</td> <td>SLND</td> <td>null</td></tr>
	  <tr><td>ocnice</td> <td>SOCN</td> <td>null</td></tr>
	  <tr><td>rof</td> <td>SROF</td> <td>null</td></tr>
	  <tr><td>rof</td> <td>DWAV</td> <td>rx1</td></tr>
	  <tr><td>rof</td> <td>RTM</td> <td>r05</td></tr>
	  <tr><td>rof</td> <td>MOSART</td> <td>r05</td></tr>
	  <tr><td>rof</td> <td>DROF</td> <td>rx1</td></tr>
	  <tr><td>rof</td> <td>DROF%CPLHIST</td> <td>r05</td></tr>
	  <tr><td>glc</td> <td>SGLC</td> <td>null</td></tr>
	  <tr><td>glc</td> <td>CISM1</td> <td>gland5UM</td></tr>
	  <tr><td>glc</td> <td>CISM2</td> <td>gland4</td></tr>
	  <tr><td>wav</td> <td>SWAV</td> <td>null</td></tr>
	  <tr><td>wav</td> <td>DWAV</td> <td>ww3a</td></tr>
	  <tr><td>wav</td> <td>WW3</td> <td>ww3a</td></tr>
	</table>
      </div>
    </div>

    {% for alias, detail in all_grids.items()|sort %}
    <div class="accordionItem">
      <h2>Grid Alias: <span id="variable">{{ alias }}</span></h2>
	<div>
	  <pre>
	    {{ detail }}
	  </pre>
    	</div>
    </div>
    {% endfor %}

    </div>
  </body>
</html>
