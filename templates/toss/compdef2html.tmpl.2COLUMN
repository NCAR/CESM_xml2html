<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>

    <style type="text/css">
      body {
         font-family:'Open Sans', Arial, sans-serif;
         font-size:14px;
         font-weight:300;
         line-height:1.6em;
         color:#656565;
         width: 90%;
         align: center;
      }

      .container {
         padding: 0 30px 0 30px;
         padding-top: 0px;
         padding-right: 30px;
         padding-bottom: 30px;
         padding-left: 30px;
         position: relative;
      }
      
      .sidebar {
         overflow: auto;
         overflow-y: auto;
         width: 29%;
         height: 100%;
         position: fixed;
         left: 69%;
         top: 10px;
         bottom: 10px;
         border: 1px solid black;
         padding: 1em;
      }

      dt { color:#656565; font-weight: bold }

      .accordionItem h2 { margin: 0; font-size: 1.1em; padding: 0.4em; color: #000; background-color: #E3E4E6; border-bottom: 1px solid #66d; width: 70%}
      .accordionItem h2:hover { cursor: pointer; }
      .accordionItem div { margin: 0; padding: 1em 0.4em; background-color: #eef; border-bottom: 1px solid #66d; width: 70%}
      .accordionItem.hide h2 { color: #000; background-color: #E3E4E6; width: 70%}
      
      .detailsBtn { background-color: #E3E4E6; }

      #variable { color:#66d; font-size: 1.2em; font-weight: bold; display: inline-block; margin-right: 30px; width: 350px; }
      #emphasis { color:#656565; font-weight: bold; display: inline-block; }
      #small { color:#9f9f9f; display: inline-block; }
    </style>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
    <script type="text/javascript">
    //<![CDATA[

    var accordionItems = new Array();

    function init() {

      // Grab the accordion items from the page
      var divs = document.getElementsByTagName( 'div' );
      for ( var i = 0; i < divs.length; i++ ) {
        if ( divs[i].className == 'accordionItem' ) accordionItems.push( divs[i] );
      }

      // Assign onclick events to the accordion item headings
      for ( var i = 0; i < accordionItems.length; i++ ) {
        var h2 = getFirstChildWithTagName( accordionItems[i], 'H2' );
        h2.onclick = toggleItem;
      }

      // Hide all accordion item bodies 
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }
    }

    function toggleItem() {
      var itemClass = this.parentNode.className;

      // Hide all items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }

      // Show this item if it was previously hidden
      if ( itemClass == 'accordionItem hide' ) {
        this.parentNode.className = 'accordionItem';
        $(this).parent().find('div').slideDown();
      }
    }

    function getFirstChildWithTagName( element, tagName ) {
      for ( var i = 0; i < element.childNodes.length; i++ ) {
        if ( element.childNodes[i].nodeName == tagName ) return element.childNodes[i];
      }
    }

    function hideAll() {
      // Hide all accordian items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideUp();
      }
    }

    function showAll() {
      // show all accordian items
      for ( var i = 0; i < accordionItems.length; i++ ) {
        accordionItems[i].className = 'accordionItem hide';
        $(accordionItems[i]).find('div').slideDown();
      }
    }

     //]]>
    </script>

  </head>
  <body onload="init()">
    <div class="container">
      <h1>Component Set Definitions (compsets)</h1>
      <p style="font-size: 0.9em;">
	Model Version: {{ model_version }}<br/>
	HTML created on: {{ today }}
      </p>
      <p>
	This page contains the complete list of component sets aliases and long names.<br/>
	They are grouped by model components designed to aid browsing.  <br/>
	<br/>
	Clicking on the name of a component will display additional descriptive information.<br/>  
	Click on the "Show Details" button and then cntl+F key to search for specific strings in this file.
      </p>

      <button class="detailsBtn" onclick="showAll();">Show Details</button>
      <button class="detailsBtn" onclick="hideAll();">Hide Details</button>

      <br/><br/>
      <div class="accordionItem">
	<h2> <span id="variable">Compset Naming Convention</span></h2>
	<div>
	  <pre>{{ help }}</pre>
	</div>
      </div>


      {% for component, comp_dict in html_dict|dictsort %}
      <div class="accordionItem">
	<h2>Component: <span id="variable">{{ component|e }}</span></h2>
	<div>
	  <table>
	    <tr>
	      <th>Alias</th>
	      <th>Long Name</th>
	    <tr/>
	    {% for alias, long_name in comp_dict.compsets.iteritems() %}
	    <tr>
	      <td><b>{{ alias|e }}</b></td>
	      <td>{{ long_name|e }}</td>
	    </tr>
	    {% endfor %}
	  </table>
	</div>
      </div>
      {% endfor %}

      <div class="sidebar">
	<h2> <span id="variable">Compset Mode Descriptions</span></h2>
	<div>
	  <p>The modes define options for the different component models using
	    a python regular expression syntax for matching when creating a new case.</p>
	  <table>
	    <tr>
	      <th>Mode</th>
	      <th>Description</th>
	    <tr/>
	    {% for mode, desc in all_descs|dictsort %}
	    <tr>
	      <td valign="top"><b>{{ mode|e }}</b></td>
	      <td valign="top">{{ desc|e }}</td>
	    </tr>
	    {% endfor %}
	    </table>
	    <br/><br/>
	  </div>
	</div>

    </div>
  </body>
</html>
